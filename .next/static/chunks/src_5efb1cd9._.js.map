{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ChatMessage.tsx"],"sourcesContent":["import React from \"react\";\n\ntype ChatMessageProps = {\n  role: \"user\" | \"assistant\";\n  content: string;\n};\n\nexport const ChatMessage = ({ role, content }: ChatMessageProps) => {\n  const isUser = role === \"user\";\n  \n  return (\n    <div className={`flex ${isUser ? \"justify-end\" : \"justify-start\"} mb-6`}>\n      <div className=\"flex items-start space-x-3 max-w-[80%]\">\n        {!isUser && (\n          <div className=\"w-8 h-8 bg-white rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n            <div className=\"w-6 h-6 bg-gray-900 rounded-full flex items-center justify-center\">\n              <div className=\"w-3 h-3 bg-white rounded-full\"></div>\n            </div>\n          </div>\n        )}\n        <div\n          className={`rounded-2xl px-6 py-4 ${\n            isUser\n              ? \"bg-gray-700 text-white ml-auto\"\n              : \"bg-gray-800 text-gray-100\"\n          }`}\n        >\n          <div className=\"whitespace-pre-wrap break-words\">{content}</div>\n          {!isUser && (\n            <div className=\"flex items-center space-x-2 mt-3 pt-3 border-t border-gray-700\">\n              <button className=\"p-1 text-gray-400 hover:text-white transition-colors\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n              </button>\n              <button className=\"p-1 text-gray-400 hover:text-white transition-colors\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                </svg>\n              </button>\n              <button className=\"p-1 text-gray-400 hover:text-white transition-colors\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\" />\n                </svg>\n              </button>\n              <button className=\"p-1 text-gray-400 hover:text-white transition-colors\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\" />\n                </svg>\n              </button>\n              <button className=\"p-1 text-gray-400 hover:text-white transition-colors\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018c.163 0 .326.02.485.06L17 4m-7 10v2a2 2 0 002 2h.095c.5 0 .905-.405.905-.905 0-.714.211-1.412.608-2.006L17 13V4m-7 10h2m5-10h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\" />\n                </svg>\n              </button>\n              <button className=\"p-1 text-gray-400 hover:text-white transition-colors\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\n                </svg>\n              </button>\n              <span className=\"text-xs text-gray-500\">1.1s</span>\n            </div>\n          )}\n        </div>\n        {isUser && (\n          <div className=\"w-8 h-8 bg-gray-600 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n            <span className=\"text-white text-sm font-medium\">U</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAOO,MAAM,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAoB;IAC7D,MAAM,SAAS,SAAS;IAExB,qBACE,6LAAC;QAAI,WAAW,CAAC,KAAK,EAAE,SAAS,gBAAgB,gBAAgB,KAAK,CAAC;kBACrE,cAAA,6LAAC;YAAI,WAAU;;gBACZ,CAAC,wBACA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;8BAIrB,6LAAC;oBACC,WAAW,CAAC,sBAAsB,EAChC,SACI,mCACA,6BACJ;;sCAEF,6LAAC;4BAAI,WAAU;sCAAmC;;;;;;wBACjD,CAAC,wBACA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,6LAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,6LAAC;oCAAK,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;gBAI7C,wBACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAK,WAAU;kCAAiC;;;;;;;;;;;;;;;;;;;;;;AAM7D;KAjEa","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/SystemPromptModal.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLanguage } from \"@/context/language-context\";\n\ntype SystemPromptModalProps = {\n  isOpen: boolean;\n  systemPrompt: string;\n  setSystemPrompt: (prompt: string) => void;\n  onClose: () => void;\n};\n\nexport const SystemPromptModal = ({ \n  isOpen, \n  systemPrompt, \n  setSystemPrompt, \n  onClose \n}: SystemPromptModalProps) => {\n  const [localPrompt, setLocalPrompt] = useState(systemPrompt);\n  const { t } = useLanguage();\n\n  useEffect(() => {\n    setLocalPrompt(systemPrompt);\n  }, [systemPrompt]);\n\n  if (!isOpen) return null;\n\n  const handleSave = () => {\n    setSystemPrompt(localPrompt);\n    onClose();\n  };\n\n  const handleCancel = () => {\n    setLocalPrompt(systemPrompt);\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black/50 z-50\">\n      <div \n        role=\"dialog\" \n        aria-modal=\"true\" \n        className=\"bg-white dark:bg-gray-800 p-6 rounded-lg w-11/12 max-w-2xl max-h-[80vh] flex flex-col\"\n      >\n        <h2 className=\"text-xl font-bold mb-4 text-gray-900 dark:text-gray-100\">\n          {t(\"systemPrompt\")}\n        </h2>\n        <textarea\n          className=\"w-full flex-1 min-h-[200px] p-3 border border-gray-300 dark:border-gray-600 rounded-lg resize-none bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          value={localPrompt}\n          onChange={(e) => setLocalPrompt(e.target.value)}\n          placeholder={t(\"defaultSystemPrompt\")}\n        />\n        <div className=\"flex justify-end space-x-3 mt-4\">\n          <button\n            onClick={handleCancel}\n            className=\"px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n          >\n            {t(\"cancel\")}\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors\"\n          >\n            {t(\"save\")}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,MAAM,oBAAoB,CAAC,EAChC,MAAM,EACN,YAAY,EACZ,eAAe,EACf,OAAO,EACgB;;IACvB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,yIAAA,CAAA,cAAW,AAAD;IAExB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,eAAe;QACjB;sCAAG;QAAC;KAAa;IAEjB,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,aAAa;QACjB,gBAAgB;QAChB;IACF;IAEA,MAAM,eAAe;QACnB,eAAe;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,MAAK;YACL,cAAW;YACX,WAAU;;8BAEV,6LAAC;oBAAG,WAAU;8BACX,EAAE;;;;;;8BAEL,6LAAC;oBACC,WAAU;oBACV,OAAO;oBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;oBAC9C,aAAa,EAAE;;;;;;8BAEjB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAET,EAAE;;;;;;sCAEL,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAET,EAAE;;;;;;;;;;;;;;;;;;;;;;;AAMf;GA1Da;;QAOG,yIAAA,CAAA,cAAW;;;KAPd","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/openrouter.ts"],"sourcesContent":["export type Message = {\n  role: \"system\" | \"user\" | \"assistant\";\n  content: string;\n};\n\nexport async function sendChatMessage(messages: Message[], apiKey: string): Promise<string> {\n  if (!apiKey) {\n    throw new Error(\"API key is required\");\n  }\n\n  try {\n    const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`,\n        \"HTTP-Referer\": typeof window !== 'undefined' ? window.location.origin : '',\n        \"X-Title\": \"ChatGPT Clone\"\n      },\n      body: JSON.stringify({\n        model: \"openai/gpt-4o\",\n        messages: messages.map((msg) => ({\n          role: msg.role,\n          content: msg.content\n        })),\n        temperature: 0.7,\n        max_tokens: 1000\n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(`API error: ${response.status} ${response.statusText}. ${errorData.error?.message || ''}`);\n    }\n\n    const result = await response.json();\n    const assistantMessage = result.choices?.[0]?.message?.content;\n    \n    if (!assistantMessage) {\n      throw new Error(\"No reply content received from API\");\n    }\n\n    return assistantMessage;\n  } catch (error) {\n    console.error(\"sendChatMessage error:\", error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;AAKO,eAAe,gBAAgB,QAAmB,EAAE,MAAc;IACvE,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,iDAAiD;YAC5E,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,iBAAiB,CAAC,OAAO,EAAE,QAAQ;gBACnC,gBAAgB,uCAAgC,OAAO,QAAQ,CAAC,MAAM;gBACtE,WAAW;YACb;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,OAAO;gBACP,UAAU,SAAS,GAAG,CAAC,CAAC,MAAQ,CAAC;wBAC/B,MAAM,IAAI,IAAI;wBACd,SAAS,IAAI,OAAO;oBACtB,CAAC;gBACD,aAAa;gBACb,YAAY;YACd;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,CAAC,EAAE,EAAE,UAAU,KAAK,EAAE,WAAW,IAAI;QAC3G;QAEA,MAAM,SAAS,MAAM,SAAS,IAAI;QAClC,MAAM,mBAAmB,OAAO,OAAO,EAAE,CAAC,EAAE,EAAE,SAAS;QAEvD,IAAI,CAAC,kBAAkB;YACrB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useTheme } from \"next-themes\";\nimport { useLanguage } from \"@/context/language-context\";\nimport { ChatMessage } from \"@/components/ChatMessage\";\nimport { SystemPromptModal } from \"@/components/SystemPromptModal\";\nimport { sendChatMessage, type Message } from \"@/lib/openrouter\";\n\nexport default function Home() {\n  const { theme, setTheme } = useTheme();\n  const { language, setLanguage, t } = useLanguage();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [systemPrompt, setSystemPrompt] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [apiKey, setApiKey] = useState(\"\");\n  const [showApiKeyInput, setShowApiKeyInput] = useState(true);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setSystemPrompt(t(\"defaultSystemPrompt\"));\n  }, [language, t]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!input.trim() || isLoading) return;\n    if (!apiKey.trim()) {\n      setError(\"Please enter your OpenRouter API key first\");\n      return;\n    }\n\n    const userMessage: Message = { role: \"user\", content: input.trim() };\n    const newMessages = [...messages, userMessage];\n    setMessages(newMessages);\n    setInput(\"\");\n    setIsLoading(true);\n    setError(\"\");\n\n    try {\n      const conversationMessages: Message[] = [\n        { role: \"system\", content: systemPrompt },\n        ...newMessages\n      ];\n\n      const response = await sendChatMessage(conversationMessages, apiKey);\n      const assistantMessage: Message = { role: \"assistant\", content: response };\n      setMessages([...newMessages, assistantMessage]);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : t(\"error\"));\n      console.error(\"Chat error:\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleApiKeySubmit = () => {\n    if (apiKey.trim()) {\n      setShowApiKeyInput(false);\n      setError(\"\");\n    }\n  };\n\n  if (showApiKeyInput) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center p-4\">\n        <div className=\"bg-gray-800 p-8 rounded-xl shadow-2xl max-w-md w-full border border-gray-700\">\n          <div className=\"text-center mb-8\">\n            <div className=\"w-12 h-12 bg-white rounded-full flex items-center justify-center mx-auto mb-4\">\n              <div className=\"w-8 h-8 bg-gray-900 rounded-full flex items-center justify-center\">\n                <div className=\"w-4 h-4 bg-white rounded-full\"></div>\n              </div>\n            </div>\n            <h1 className=\"text-3xl font-bold text-white mb-2\">\n              {t(\"title\")}\n            </h1>\n          </div>\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-300 mb-3\">\n              OpenRouter API Key\n            </label>\n            <input\n              type=\"password\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              className=\"w-full p-4 bg-gray-700 border border-gray-600 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-white focus:border-transparent\"\n              placeholder=\"Enter your OpenRouter API key\"\n              onKeyPress={(e) => e.key === \"Enter\" && handleApiKeySubmit()}\n            />\n          </div>\n          <button\n            onClick={handleApiKeySubmit}\n            className=\"w-full bg-white text-gray-900 py-4 rounded-xl hover:bg-gray-100 transition-colors font-medium\"\n          >\n            Continue\n          </button>\n          <p className=\"text-xs text-gray-400 mt-4 text-center\">\n            Get your API key from{\" \"}\n            <a\n              href=\"https://openrouter.ai/keys\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-white hover:underline\"\n            >\n              OpenRouter\n            </a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      {/* Header */}\n      <header className=\"border-b border-gray-800 px-6 py-4\">\n        <div className=\"max-w-6xl mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-white rounded-full flex items-center justify-center\">\n              <div className=\"w-6 h-6 bg-gray-900 rounded-full flex items-center justify-center\">\n                <div className=\"w-3 h-3 bg-white rounded-full\"></div>\n              </div>\n            </div>\n            <h1 className=\"text-xl font-bold\">\n              {t(\"title\")}\n            </h1>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            {/* Language Selector */}\n            <select\n              value={language}\n              onChange={(e) => setLanguage(e.target.value as \"en\" | \"id\")}\n              className=\"px-3 py-2 bg-gray-800 border border-gray-700 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-white\"\n            >\n              <option value=\"en\">{t(\"english\")}</option>\n              <option value=\"id\">{t(\"indonesian\")}</option>\n            </select>\n\n            {/* Theme Toggle */}\n            <button\n              onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n              className=\"p-2 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-700 transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n            </button>\n\n            {/* Register/Login */}\n            <button className=\"px-4 py-2 bg-white text-gray-900 rounded-lg hover:bg-gray-100 transition-colors font-medium\">\n              {t(\"register\")}\n            </button>\n            <button className=\"px-4 py-2 text-white hover:bg-gray-800 rounded-lg transition-colors\">\n              {t(\"login\")}\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {messages.length === 0 ? (\n        /* Welcome Screen */\n        <div className=\"flex flex-col items-center justify-center min-h-[calc(100vh-200px)] px-6\">\n          <div className=\"text-center mb-12\">\n            <div className=\"w-20 h-20 bg-white rounded-full flex items-center justify-center mx-auto mb-6\">\n              <div className=\"w-16 h-16 bg-gray-900 rounded-full flex items-center justify-center\">\n                <div className=\"w-8 h-8 bg-white rounded-full\"></div>\n              </div>\n            </div>\n            <h1 className=\"text-5xl font-bold mb-4\">\n              {t(\"title\")}\n            </h1>\n          </div>\n\n          {/* Main Input */}\n          <div className=\"w-full max-w-3xl mb-8\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder={t(\"welcomeMessage\")}\n                className=\"w-full px-6 py-4 bg-gray-800 border border-gray-700 rounded-2xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-white focus:border-transparent text-lg\"\n              />\n              <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2 flex items-center space-x-2\">\n                <button className=\"p-2 text-gray-400 hover:text-white transition-colors\">\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\" />\n                  </svg>\n                </button>\n                <button \n                  onClick={handleSendMessage}\n                  disabled={!input.trim() || isLoading}\n                  className=\"p-2 bg-white text-gray-900 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex flex-wrap justify-center gap-4 mb-8\">\n            <button \n              onClick={() => setIsModalOpen(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-700 transition-colors\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              <span>{t(\"editImage\")}</span>\n            </button>\n            <button className=\"flex items-center space-x-2 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-700 transition-colors\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n              </svg>\n              <span>{t(\"latestNews\")}</span>\n            </button>\n            <button className=\"flex items-center space-x-2 px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg hover:bg-gray-700 transition-colors\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n              </svg>\n              <span>{t(\"persona\")}</span>\n            </button>\n          </div>\n\n          {/* Footer */}\n          <div className=\"text-center text-gray-400 text-sm\">\n            <p>\n              {t(\"sendMessageDisclaimer\")}\n            </p>\n            <div className=\"flex justify-center space-x-4 mt-2\">\n              <a href=\"#\" className=\"hover:text-white transition-colors\">{t(\"terms\")}</a>\n              <a href=\"#\" className=\"hover:text-white transition-colors\">{t(\"privacyPolicy\")}</a>\n            </div>\n          </div>\n        </div>\n      ) : (\n        /* Chat View */\n        <div className=\"flex flex-col h-[calc(100vh-80px)]\">\n          {/* Chat Messages */}\n          <div className=\"flex-1 overflow-y-auto px-6 py-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              {messages.map((message, index) => (\n                <ChatMessage\n                  key={index}\n                  role={message.role as \"user\" | \"assistant\"}\n                  content={message.content}\n                />\n              ))}\n              \n              {isLoading && (\n                <div className=\"flex justify-start mb-4\">\n                  <div className=\"bg-gray-800 rounded-2xl px-6 py-4 max-w-[80%]\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                      <span className=\"text-gray-300\">{t(\"loading\")}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              {error && (\n                <div className=\"bg-red-900 border border-red-700 text-red-300 px-6 py-4 rounded-2xl mb-4\">\n                  {error}\n                </div>\n              )}\n              \n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n\n          {/* Input Area */}\n          <div className=\"border-t border-gray-800 px-6 py-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder={t(\"placeholder\")}\n                  className=\"w-full px-6 py-4 bg-gray-800 border border-gray-700 rounded-2xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-white focus:border-transparent\"\n                />\n                <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2 flex items-center space-x-2\">\n                  <button className=\"p-2 text-gray-400 hover:text-white transition-colors\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\" />\n                    </svg>\n                  </button>\n                  <button \n                    onClick={handleSendMessage}\n                    disabled={!input.trim() || isLoading}\n                    className=\"p-2 bg-white text-gray-900 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* System Prompt Modal */}\n      <SystemPromptModal\n        isOpen={isModalOpen}\n        systemPrompt={systemPrompt}\n        setSystemPrompt={setSystemPrompt}\n        onClose={() => setIsModalOpen(false)}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}